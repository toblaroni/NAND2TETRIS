

class Board {
    field int num_cols, num_rows, cell_size;
    field Array rows;

    constructor Board new(int resolution) {
        var int i, j, x, y;
        var Array row;

        let cell_size = Board.pow(2, resolution) - 1;

        let num_rows = 256 / cell_size;
        let num_cols = 512 / cell_size;

        let rows = Array.new(num_rows);

        // Fill the board
        let i = 0;
        while (i < num_rows) {
            let y = i * cell_size;

            let rows[i] = Array.new(num_cols);
            let row = rows[i];
            
            let j = 0;
            while (j < num_cols) {
                let x = j * cell_size;

                let row[j] = Cell.new(x, y, cell_size, true, this);

                let j = j + 1;
            }
            let i = i + 1;
        }

        return this;

    }

    method int get_width() {
        return num_cols;
    }

    method int get_height() {
        return num_rows;
    }

    method Cell get_cell(int x, int y) {
        var Array row;

        let row = rows[y];
        return row[x];
    }

    method void draw_board() {
        // Loop through current board and draw each cell
        var Cell cell;
        var int i, j;

        let i = 0;
        while (i < num_rows) {
            let j = 0;

            while (j < num_cols) {
                let cell = get_cell(j, i);
            
                do cell.draw();
                let j = j + 1;
            }
            let i = i + 1;
        }
        return;
    }


    // Shouldn't really be in here
    function int pow(int base, int exponent) {
        var int res;
        let res = 1;
        while (exponent > 0) {
            let res = res * base;
            let exponent = exponent - 1;
        }
        return res;
    }
}